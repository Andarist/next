var W = function ea(X) {
  function P(f, c, d, l, a) {
    for (
      var h = 0,
        b = 0,
        t = 0,
        m = 0,
        k,
        p,
        e,
        D = 0,
        w = 0,
        K = 0,
        y,
        L = 0,
        z = (y = 0),
        n = 0,
        I = (p = 0),
        M = 0,
        q = 0,
        E = d.length,
        F = E - 1,
        g = "",
        r = "",
        G = "",
        H = "",
        A;
      n < E;

    ) {
      e = d.charCodeAt(n);
      n === F &&
        0 !== b + m + t + h &&
        (0 !== b && (e = 47 === b ? 10 : 47), (m = t = h = 0), E++, F++);
      if (0 === b + m + t + h) {
        if (n === F && (0 < p && (g = g.replace(N, "")), 0 < g.trim().length)) {
          switch (e) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;
            default:
              g += d.charAt(n);
          }
          e = 59;
        }
        if (1 === I)
          switch (e) {
            case 123:
            case 125:
            case 59:
            case 34:
            case 39:
            case 40:
            case 41:
            case 44:
              I = 0;
            case 9:
            case 13:
            case 10:
            case 32:
              break;
            default:
              for (I = 0, q = n, k = e, n--, e = 59; q < E; )
                switch (d.charCodeAt(q++)) {
                  case 10:
                  case 13:
                  case 59:
                    ++n;
                    e = k;
                    q = E;
                    break;
                  case 58:
                    0 < p && (++n, (e = k));
                  case 123:
                    q = E;
                }
          }
        switch (e) {
          case 123:
            g = g.trim();
            k = g.charCodeAt(0);
            y = 1;
            for (q = ++n; n < E; ) {
              e = d.charCodeAt(n);
              switch (e) {
                case 123:
                  y++;
                  break;
                case 125:
                  y--;
              }
              if (0 === y) break;
              n++;
            }
            e = d.substring(q, n);
            0 === k && (k = (g = g.replace(fa, "").trim()).charCodeAt(0));
            switch (k) {
              case 64:
                0 < p && (g = g.replace(N, ""));
                p = g.charCodeAt(1);
                switch (p) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    k = c;
                    break;
                  default:
                    k = Q;
                }
                e = P(c, k, e, p, a + 1);
                q = e.length;
                0 < x &&
                  ((k = Y(Q, g, M)),
                  (A = J(3, e, k, c, B, v, q, p, a, l)),
                  (g = k.join("")),
                  void 0 !== A &&
                    0 === (q = (e = A.trim()).length) &&
                    ((p = 0), (e = "")));
                if (0 < q)
                  switch (p) {
                    case 115:
                      g = g.replace(ha, ia);
                    case 100:
                    case 109:
                    case 45:
                      e = g + "{" + e + "}";
                      break;
                    case 107:
                      g = g.replace(ja, "$1 $2");
                      e = g + "{" + e + "}";
                      e =
                        1 === u || (2 === u && O("@" + e, 3))
                          ? "@-webkit-" + e + "@" + e
                          : "@" + e;
                      break;
                    default:
                      (e = g + e), 112 === l && (e = ((r += e), ""));
                  }
                else e = "";
                break;
              default:
                e = P(c, Y(c, g, M), e, l, a + 1);
            }
            G += e;
            y = M = p = z = I = L = 0;
            g = "";
            e = d.charCodeAt(++n);
            break;
          case 125:
          case 59:
            g = (0 < p ? g.replace(N, "") : g).trim();
            if (1 < (q = g.length))
              switch (
                (0 === z &&
                  ((k = g.charCodeAt(0)), 45 === k || (96 < k && 123 > k)) &&
                  (q = (g = g.replace(" ", ":")).length),
                0 < x &&
                  void 0 !== (A = J(1, g, c, f, B, v, r.length, l, a, l)) &&
                  0 === (q = (g = A.trim()).length) &&
                  (g = "\x00\x00"),
                (k = g.charCodeAt(0)),
                (p = g.charCodeAt(1)),
                k + p)
              ) {
                case 0:
                  break;
                case 169:
                case 163:
                  H += g + d.charAt(n);
                  break;
                default:
                  58 !== g.charCodeAt(q - 1) &&
                    (r += R(g, k, p, g.charCodeAt(2)));
              }
            M = p = z = I = L = 0;
            g = "";
            e = d.charCodeAt(++n);
        }
      }
      switch (e) {
        case 13:
        case 10:
          if (0 === b + m + t + h + 1)
            switch (K) {
              case 41:
              case 39:
              case 34:
              case 64:
              case 126:
              case 62:
              case 42:
              case 43:
              case 47:
              case 45:
              case 58:
              case 44:
              case 59:
              case 123:
              case 125:
                break;
              default:
                0 < z && (I = 1);
            }
          47 === b ? (b = 0) : 0 === 1 + L && ((p = 1), (g += "\x00"));
          0 < x * Z && J(0, g, c, f, B, v, r.length, l, a, l);
          v = 1;
          B++;
          break;
        case 59:
        case 125:
          if (0 === b + m + t + h) {
            v++;
            break;
          }
        default:
          v++;
          k = d.charAt(n);
          switch (e) {
            case 9:
            case 32:
              if (0 === m + h + b)
                switch (D) {
                  case 44:
                  case 58:
                  case 9:
                  case 32:
                    k = "";
                    break;
                  default:
                    32 !== e && (k = " ");
                }
              break;
            case 0:
              k = "\\0";
              break;
            case 12:
              k = "\\f";
              break;
            case 11:
              k = "\\v";
              break;
            case 38:
              0 === m + b + h && ((p = M = 1), (k = "\f" + k));
              break;
            case 108:
              if (0 === m + b + h + C && 0 < z)
                switch (n - z) {
                  case 2:
                    112 === D && 58 === d.charCodeAt(n - 3) && (C = D);
                  case 8:
                    111 === w && (C = w);
                }
              break;
            case 58:
              0 === m + b + h && (z = n);
              break;
            case 44:
              0 === b + t + m + h && ((p = 1), (k += "\r"));
              break;
            case 34:
              0 === b && (m = m === e ? 0 : 0 === m ? e : m);
              break;
            case 39:
              0 === b && (m = m === e ? 0 : 0 === m ? e : m);
              break;
            case 91:
              0 === m + b + t && h++;
              break;
            case 93:
              0 === m + b + t && h--;
              break;
            case 41:
              0 === m + b + h && t--;
              break;
            case 40:
              if (0 === m + b + h) {
                if (0 === L)
                  switch (2 * D + 3 * w) {
                    case 533:
                      break;
                    default:
                      L = 1;
                  }
                t++;
              }
              break;
            case 64:
              0 === b + t + m + h + z + y && (y = 1);
              break;
            case 42:
            case 47:
              if (!(0 < m + h + t))
                switch (b) {
                  case 0:
                    switch (2 * e + 3 * d.charCodeAt(n + 1)) {
                      case 235:
                        b = 47;
                        break;
                      case 220:
                        (q = n), (b = 42);
                    }
                    break;
                  case 42:
                    47 === e &&
                      42 === D &&
                      (33 === d.charCodeAt(q + 2) &&
                        (r += d.substring(q, n + 1)),
                      (k = ""),
                      (b = 0));
                }
          }
          0 === b && ((g += k), 32 !== e && 9 !== e && (K = e));
      }
      w = D;
      D = e;
      n++;
    }
    q = r.length;
    if (0 < q) {
      k = c;
      if (
        0 < x &&
        ((A = J(2, r, k, f, B, v, q, l, a, l)),
        void 0 !== A && 0 === (r = A).length)
      )
        return H + r + G;
      r = k.join(",") + "{" + r + "}";
      if (0 !== u * C) {
        2 !== u || O(r, 2) || (C = 0);
        switch (C) {
          case 111:
            r = r.replace(ka, ":-moz-$1") + r;
            break;
          case 112:
            r =
              r.replace(S, "::-webkit-input-$1") +
              r.replace(S, "::-moz-$1") +
              r.replace(S, ":-ms-input-$1") +
              r;
        }
        C = 0;
      }
    }
    return H + r + G;
  }
  function Y(f, c, d) {
    var l = c.trim().split(la);
    c = l;
    var a = l.length,
      h = f.length;
    switch (h) {
      case 0:
      case 1:
        var b = 0;
        for (f = 0 === h ? "" : f[0] + " "; b < a; ++b)
          c[b] = aa(f, c[b], d, h).trim();
        break;
      default:
        var t = (b = 0);
        for (c = []; b < a; ++b)
          for (var m = 0; m < h; ++m)
            c[t++] = aa(f[m] + " ", l[b], d, h).trim();
    }
    return c;
  }
  function aa(f, c, d, l) {
    var a = c.charCodeAt(0);
    33 > a && (a = (c = c.trim()).charCodeAt(0));
    switch (a) {
      case 38:
        switch (1 + l) {
          case 0:
          case 1:
            if (0 === f.trim().length) break;
          default:
            return c.replace(K, "$1" + f.trim());
        }
        break;
      case 58:
        switch (c.charCodeAt(1)) {
          case 103:
            break;
          default:
            return f.trim() + c.replace(K, "$1" + f.trim());
        }
      default:
        if (0 < 1 * d && 0 < c.indexOf("\f"))
          return c.replace(K, (58 === f.charCodeAt(0) ? "" : "$1") + f.trim());
    }
    return f + c;
  }
  function R(f, c, d, l) {
    var a = f + ";",
      h = 2 * c + 3 * d + 4 * l;
    if (944 === h) {
      f = a.length;
      var b = a.indexOf(":", 9) + 1;
      c = a.substring(0, b).trim();
      d = a.substring(b, f - 1).trim();
      switch (0 * a.charCodeAt(9)) {
        case 0:
          break;
        case 45:
          if (110 !== a.charCodeAt(10)) break;
        default:
          for (
            a = d.split(((d = ""), ma)), b = l = 0, f = a.length;
            l < f;
            b = 0, ++l
          ) {
            h = a[l];
            for (var t = h.split(na); (h = t[b]); ) t[b++] = h;
            d += (0 === l ? "" : ",") + t.join(" ");
          }
      }
      d = c + d + ";";
      return 1 === u || (2 === u && O(d, 1)) ? "-webkit-" + d + d : d;
    }
    if (0 === u || (2 === u && !O(a, 1))) return a;
    switch (h) {
      case 1015:
        return 97 === a.charCodeAt(10) ? "-webkit-" + a + a : a;
      case 951:
        return 116 === a.charCodeAt(3) ? "-webkit-" + a + a : a;
      case 963:
        return 110 === a.charCodeAt(5) ? "-webkit-" + a + a : a;
      case 1009:
        if (100 !== a.charCodeAt(4)) break;
      case 969:
      case 942:
        return "-webkit-" + a + a;
      case 978:
        return "-webkit-" + a + "-moz-" + a + a;
      case 1019:
      case 983:
        return "-webkit-" + a + "-moz-" + a + "-ms-" + a + a;
      case 883:
        return 45 === a.charCodeAt(8) ? "-webkit-" + a + a : a;
      case 932:
        if (45 === a.charCodeAt(4))
          switch (a.charCodeAt(5)) {
            case 103:
              return (
                "-webkit-box-" +
                a.replace("-grow", "") +
                "-webkit-" +
                a +
                "-ms-" +
                a.replace("grow", "positive") +
                a
              );
            case 115:
              return (
                "-webkit-" + a + "-ms-" + a.replace("shrink", "negative") + a
              );
            case 98:
              return (
                "-webkit-" +
                a +
                "-ms-" +
                a.replace("basis", "preferred-size") +
                a
              );
          }
        return "-webkit-" + a + "-ms-" + a + a;
      case 964:
        return "-webkit-" + a + "-ms-flex-" + a + a;
      case 1023:
        if (99 !== a.charCodeAt(8)) break;
        b = a
          .substring(a.indexOf(":", 15))
          .replace("flex-", "")
          .replace("space-between", "justify");
        return (
          "-webkit-box-pack" + b + "-webkit-" + a + "-ms-flex-pack" + b + a
        );
      case 1005:
        return oa.test(a)
          ? a.replace(ba, ":-webkit-") + a.replace(ba, ":-moz-") + a
          : a;
      case 1e3:
        b = a.substring(13).trim();
        c = b.indexOf("-") + 1;
        switch (b.charCodeAt(0) + b.charCodeAt(c)) {
          case 226:
            b = a.replace(F, "tb");
            break;
          case 232:
            b = a.replace(F, "tb-rl");
            break;
          case 220:
            b = a.replace(F, "lr");
            break;
          default:
            return a;
        }
        return "-webkit-" + a + "-ms-" + b + a;
      case 1017:
        if (-1 === a.indexOf("sticky", 9)) break;
      case 975:
        c = (a = f).length - 10;
        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a)
          .substring(f.indexOf(":", 7) + 1)
          .trim();
        switch ((h = b.charCodeAt(0) + (b.charCodeAt(7) | 0))) {
          case 203:
            if (111 > b.charCodeAt(8)) break;
          case 115:
            a = a.replace(b, "-webkit-" + b) + ";" + a;
            break;
          case 207:
          case 102:
            a =
              a.replace(b, "-webkit-" + (102 < h ? "inline-" : "") + "box") +
              ";" +
              a.replace(b, "-webkit-" + b) +
              ";" +
              a.replace(b, "-ms-" + b + "box") +
              ";" +
              a;
        }
        return a + ";";
      case 938:
        if (45 === a.charCodeAt(5))
          switch (a.charCodeAt(6)) {
            case 105:
              return (
                (b = a.replace("-items", "")),
                "-webkit-" + a + "-webkit-box-" + b + "-ms-flex-" + b + a
              );
            case 115:
              return "-webkit-" + a + "-ms-flex-item-" + a.replace(ca, "") + a;
            default:
              return (
                "-webkit-" +
                a +
                "-ms-flex-line-pack" +
                a.replace("align-content", "").replace(ca, "") +
                a
              );
          }
        break;
      case 973:
      case 989:
        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;
      case 931:
      case 953:
        if (!0 === pa.test(f))
          return 115 === (b = f.substring(f.indexOf(":") + 1)).charCodeAt(0)
            ? R(f.replace("stretch", "fill-available"), c, d, l).replace(
                ":fill-available",
                ":stretch"
              )
            : a.replace(b, "-webkit-" + b) +
                a.replace(b, "-moz-" + b.replace("fill-", "")) +
                a;
        break;
      case 962:
        if (
          ((a =
            "-webkit-" + a + (102 === a.charCodeAt(5) ? "-ms-" + a : "") + a),
          211 === d + l &&
            105 === a.charCodeAt(13) &&
            0 < a.indexOf("transform", 10))
        )
          return (
            a.substring(0, a.indexOf(";", 27) + 1).replace(qa, "$1-webkit-$2") +
            a
          );
    }
    return a;
  }
  function O(f, c) {
    var d = f.indexOf(1 === c ? ":" : "{"),
      l = f.substring(0, 3 !== c ? d : 10);
    d = f.substring(d + 1, f.length - 1);
    return G(2 !== c ? l : l.replace(ra, "$1"), d, c);
  }
  function ia(f, c) {
    var d = R(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
    return d !== c + ";"
      ? d.replace(sa, " or ($1)").substring(4)
      : "(" + c + ")";
  }
  function J(f, c, d, l, a, h, b, t, m, k) {
    for (var p = 0, e = c, u; p < x; ++p)
      switch ((u = H[p].call(w, f, e, d, l, a, h, b, t, m, k))) {
        case void 0:
        case !1:
        case !0:
        case null:
          break;
        default:
          e = u;
      }
    switch (e) {
      case void 0:
      case !1:
      case !0:
      case null:
      case c:
        break;
      default:
        return e;
    }
  }
  function T(f) {
    switch (f) {
      case void 0:
      case null:
        x = H.length = 0;
        break;
      default:
        switch (f.constructor) {
          case Array:
            for (var c = 0, d = f.length; c < d; ++c) T(f[c]);
            break;
          case Function:
            H[x++] = f;
            break;
          case Boolean:
            Z = !!f | 0;
        }
    }
    return T;
  }
  function U(f) {
    for (var c in f) {
      var d = f[c];
      switch (c) {
        case "compress":
          da = d | 0;
          break;
        case "prefix":
          (G = null),
            d
              ? "function" !== typeof d
                ? (u = 1)
                : ((u = 2), (G = d))
              : (u = 0);
      }
    }
    return U;
  }
  function w(f, c) {
    if (void 0 !== this && this.constructor === w) return ea(f);
    var d = f,
      l = d.charCodeAt(0);
    33 > l && (d = d.trim());
    l = 1;
    V = d;
    d = [V];
    if (0 < x) {
      var a = J(-1, c, d, d, B, v, 0, 0, 0, 0);
      void 0 !== a && "string" === typeof a && (c = a);
    }
    var h = P(Q, d, c, 0, 0);
    0 < x &&
      ((a = J(-2, h, d, d, B, v, h.length, 0, 0, 0)),
      void 0 !== a && "string" !== typeof (h = a) && (l = 0));
    V = "";
    C = 0;
    v = B = 1;
    return 0 === da * l
      ? h
      : h
          .replace(N, "")
          .replace(ta, "")
          .replace(ua, "$1")
          .replace(va, "$1")
          .replace(wa, " ");
  }
  var fa = /^\0+/g,
    N = /[\0\r\f]/g,
    ba = /: */g,
    oa = /zoo|gra/,
    qa = /([,: ])(transform)/g,
    ma = /,+\s*(?![^(]*[)])/g,
    na = / +\s*(?![^(]*[)])/g,
    la = /,\r+?/g,
    K = /([\t\r\n ])*\f?&/g,
    ja = /@(k\w+)\s*(\S*)\s*/,
    S = /::(place)/g,
    ka = /:(read-only)/g,
    ta = /\s+(?=[{\];=:>])/g,
    ua = /([[}=:>])\s+/g,
    va = /(\{[^{]+?);(?=\})/g,
    wa = /\s{2,}/g,
    F = /[svh]\w+-[tblr]{2}/,
    ha = /\(\s*(.*)\s*\)/g,
    sa = /([\s\S]*?);/g,
    ca = /-self|flex-/g,
    ra = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
    pa = /stretch|:\s*\w+\-(?:conte|avail)/,
    v = 1,
    B = 1,
    C = 0,
    u = 1,
    da = 0,
    Q = [],
    H = [],
    x = 0,
    G = null,
    Z = 0,
    V = "";
  w.use = T;
  w.set = U;
  void 0 !== X && U(X);
  return w;
};

export default W;
