var X = function fa(Y) {
  function Q(e, c, d, l, a) {
    for (
      var h = 0,
        b = 0,
        u = 0,
        m = 0,
        g,
        p,
        k,
        v = 0,
        y = 0,
        M = 0,
        F = 0,
        z = 0,
        n = 0,
        B = 0,
        q = 0,
        K = (p = 0),
        N = 0,
        r = 0,
        G = d.length,
        H = G - 1,
        f = "",
        t = "",
        I = "",
        J = "",
        C;
      q < G;

    ) {
      k = d.charCodeAt(q);
      q === H &&
        0 !== b + m + u + h &&
        (0 !== b && (k = 47 === b ? 10 : 47), (m = u = h = 0), G++, H++);
      if (0 === b + m + u + h) {
        if (q === H && (0 < p && (f = f.replace(O, "")), 0 < f.trim().length)) {
          switch (k) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;
            default:
              f += d.charAt(q);
          }
          k = 59;
        }
        if (1 === K)
          switch (k) {
            case 123:
            case 125:
            case 59:
            case 34:
            case 39:
            case 40:
            case 41:
            case 44:
              K = 0;
            case 9:
            case 13:
            case 10:
            case 32:
              break;
            default:
              for (K = 0, r = q, g = k, q--, k = 59; r < G; )
                switch (d.charCodeAt(r++)) {
                  case 10:
                  case 13:
                  case 59:
                    ++q;
                    k = g;
                    r = G;
                    break;
                  case 58:
                    0 < p && (++q, (k = g));
                  case 123:
                    r = G;
                }
          }
        switch (k) {
          case 123:
            f = f.trim();
            g = f.charCodeAt(0);
            F = 1;
            for (r = ++q; q < G; ) {
              k = d.charCodeAt(q);
              switch (k) {
                case 123:
                  F++;
                  break;
                case 125:
                  F--;
              }
              if (0 === F) break;
              q++;
            }
            n = d.substring(r, q);
            0 === g && (g = (f = f.replace(ha, "").trim()).charCodeAt(0));
            switch (g) {
              case 64:
                0 < p && (f = f.replace(O, ""));
                p = f.charCodeAt(1);
                switch (p) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    g = c;
                    break;
                  default:
                    g = R;
                }
                n = Q(c, g, n, p, a + 1);
                r = n.length;
                0 < A &&
                  ((g = Z(R, f, N)),
                  (C = L(3, n, g, c, D, x, r, p, a, l)),
                  (f = g.join("")),
                  void 0 !== C &&
                    0 === (r = (n = C.trim()).length) &&
                    ((p = 0), (n = "")));
                if (0 < r)
                  switch (p) {
                    case 115:
                      f = f.replace(ia, ja);
                    case 100:
                    case 109:
                    case 45:
                      n = f + "{" + n + "}";
                      break;
                    case 107:
                      f = f.replace(ka, "$1 $2");
                      n = f + "{" + n + "}";
                      n =
                        1 === w || (2 === w && P("@" + n, 3))
                          ? "@-webkit-" + n + "@" + n
                          : "@" + n;
                      break;
                    default:
                      (n = f + n), 112 === l && (n = ((t += n), ""));
                  }
                else n = "";
                break;
              default:
                n = Q(c, Z(c, f, N), n, l, a + 1);
            }
            I += n;
            n = N = p = B = K = z = 0;
            f = "";
            k = d.charCodeAt(++q);
            break;
          case 125:
          case 59:
            f = (0 < p ? f.replace(O, "") : f).trim();
            if (1 < (r = f.length))
              switch (
                (0 === B &&
                  ((g = f.charCodeAt(0)), 45 === g || (96 < g && 123 > g)) &&
                  (r = (f = f.replace(" ", ":")).length),
                0 < A &&
                  void 0 !== (C = L(1, f, c, e, D, x, t.length, l, a, l)) &&
                  0 === (r = (f = C.trim()).length) &&
                  (f = "\x00\x00"),
                (g = f.charCodeAt(0)),
                (p = f.charCodeAt(1)),
                g + p)
              ) {
                case 0:
                  break;
                case 169:
                case 163:
                  J += f + d.charAt(q);
                  break;
                default:
                  58 !== f.charCodeAt(r - 1) &&
                    (t += S(f, g, p, f.charCodeAt(2)));
              }
            N = p = B = K = z = 0;
            f = "";
            k = d.charCodeAt(++q);
        }
      }
      switch (k) {
        case 13:
        case 10:
          if (0 === b + m + u + h + 1)
            switch (M) {
              case 41:
              case 39:
              case 34:
              case 64:
              case 126:
              case 62:
              case 42:
              case 43:
              case 47:
              case 45:
              case 58:
              case 44:
              case 59:
              case 123:
              case 125:
                break;
              default:
                0 < B && (K = 1);
            }
          47 === b ? (b = 0) : 0 === 1 + z && ((p = 1), (f += "\x00"));
          0 < A * aa && L(0, f, c, e, D, x, t.length, l, a, l);
          x = 1;
          D++;
          break;
        case 59:
        case 125:
          if (0 === b + m + u + h) {
            x++;
            break;
          }
        default:
          x++;
          g = d.charAt(q);
          switch (k) {
            case 9:
            case 32:
              if (0 === m + h + b)
                switch (v) {
                  case 44:
                  case 58:
                  case 9:
                  case 32:
                    g = "";
                    break;
                  default:
                    32 !== k && (g = " ");
                }
              break;
            case 0:
              g = "\\0";
              break;
            case 12:
              g = "\\f";
              break;
            case 11:
              g = "\\v";
              break;
            case 38:
              0 === m + b + h && ((p = N = 1), (g = "\f" + g));
              break;
            case 108:
              if (0 === m + b + h + E && 0 < B)
                switch (q - B) {
                  case 2:
                    112 === v && 58 === d.charCodeAt(q - 3) && (E = v);
                  case 8:
                    111 === y && (E = y);
                }
              break;
            case 58:
              0 === m + b + h && (B = q);
              break;
            case 44:
              0 === b + u + m + h && ((p = 1), (g += "\r"));
              break;
            case 34:
              0 === b && (m = m === k ? 0 : 0 === m ? k : m);
              break;
            case 39:
              0 === b && (m = m === k ? 0 : 0 === m ? k : m);
              break;
            case 91:
              0 === m + b + u && h++;
              break;
            case 93:
              0 === m + b + u && h--;
              break;
            case 41:
              0 === m + b + h && u--;
              break;
            case 40:
              if (0 === m + b + h) {
                if (0 === z)
                  switch (2 * v + 3 * y) {
                    case 533:
                      break;
                    default:
                      (F = 0), (z = 1);
                  }
                u++;
              }
              break;
            case 64:
              0 === b + u + m + h + B + n && (n = 1);
              break;
            case 42:
            case 47:
              if (!(0 < m + h + u))
                switch (b) {
                  case 0:
                    switch (2 * k + 3 * d.charCodeAt(q + 1)) {
                      case 235:
                        b = 47;
                        break;
                      case 220:
                        (r = q), (b = 42);
                    }
                    break;
                  case 42:
                    47 === k &&
                      42 === v &&
                      (33 === d.charCodeAt(r + 2) &&
                        (t += d.substring(r, q + 1)),
                      (g = ""),
                      (b = 0));
                }
          }
          if (0 === b) {
            if (0 === 1 + m + h + n && 107 !== l && 59 !== k)
              switch (k) {
                case 44:
                case 126:
                case 62:
                case 43:
                case 41:
                case 40:
                  if (0 === z) {
                    switch (v) {
                      case 9:
                      case 32:
                      case 10:
                      case 13:
                        g += "\x00";
                        break;
                      default:
                        g = "\x00" + g + (44 === k ? "" : "\x00");
                    }
                    p = 1;
                  } else
                    switch (k) {
                      case 40:
                        z = ++F;
                        break;
                      case 41:
                        0 === (z = --F) && ((p = 1), (g += "\x00"));
                    }
                  break;
                case 9:
                case 32:
                  switch (v) {
                    case 0:
                    case 123:
                    case 125:
                    case 59:
                    case 44:
                    case 12:
                    case 9:
                    case 32:
                    case 10:
                    case 13:
                      break;
                    default:
                      0 === z && ((p = 1), (g += "\x00"));
                  }
              }
            f += g;
            32 !== k && 9 !== k && (M = k);
          }
      }
      y = v;
      v = k;
      q++;
    }
    r = t.length;
    if (0 < r) {
      g = c;
      if (
        0 < A &&
        ((C = L(2, t, g, e, D, x, r, l, a, l)),
        void 0 !== C && 0 === (t = C).length)
      )
        return J + t + I;
      t = g.join(",") + "{" + t + "}";
      if (0 !== w * E) {
        2 !== w || P(t, 2) || (E = 0);
        switch (E) {
          case 111:
            t = t.replace(la, ":-moz-$1") + t;
            break;
          case 112:
            t =
              t.replace(T, "::-webkit-input-$1") +
              t.replace(T, "::-moz-$1") +
              t.replace(T, ":-ms-input-$1") +
              t;
        }
        E = 0;
      }
    }
    return J + t + I;
  }
  function Z(e, c, d) {
    var l = c.trim().split(ma);
    c = l;
    var a = l.length,
      h = e.length;
    switch (h) {
      case 0:
      case 1:
        var b = 0;
        for (e = 0 === h ? "" : e[0] + " "; b < a; ++b)
          c[b] = ba(e, c[b], d, h).trim();
        break;
      default:
        var u = (b = 0);
        for (c = []; b < a; ++b)
          for (var m = 0; m < h; ++m)
            c[u++] = ba(e[m] + " ", l[b], d, h).trim();
    }
    return c;
  }
  function ba(e, c, d, l) {
    var a = c.charCodeAt(0);
    33 > a && (a = (c = c.trim()).charCodeAt(0));
    switch (a) {
      case 38:
        switch (1 + l) {
          case 0:
          case 1:
            if (0 === e.trim().length) break;
          default:
            return c.replace(M, "$1" + e.trim());
        }
        break;
      case 58:
        switch (c.charCodeAt(1)) {
          case 103:
            break;
          default:
            return e.trim() + c.replace(M, "$1" + e.trim());
        }
      default:
        if (0 < 1 * d && 0 < c.indexOf("\f"))
          return c.replace(M, (58 === e.charCodeAt(0) ? "" : "$1") + e.trim());
    }
    return e + c;
  }
  function S(e, c, d, l) {
    var a = e + ";",
      h = 2 * c + 3 * d + 4 * l;
    if (944 === h) {
      e = a.length;
      var b = a.indexOf(":", 9) + 1;
      c = a.substring(0, b).trim();
      d = a.substring(b, e - 1).trim();
      switch (0 * a.charCodeAt(9)) {
        case 0:
          break;
        case 45:
          if (110 !== a.charCodeAt(10)) break;
        default:
          for (
            a = d.split(((d = ""), na)), b = l = 0, e = a.length;
            l < e;
            b = 0, ++l
          ) {
            h = a[l];
            for (var u = h.split(oa); (h = u[b]); ) u[b++] = h;
            d += (0 === l ? "" : ",") + u.join(" ");
          }
      }
      d = c + d + ";";
      return 1 === w || (2 === w && P(d, 1)) ? "-webkit-" + d + d : d;
    }
    if (0 === w || (2 === w && !P(a, 1))) return a;
    switch (h) {
      case 1015:
        return 97 === a.charCodeAt(10) ? "-webkit-" + a + a : a;
      case 951:
        return 116 === a.charCodeAt(3) ? "-webkit-" + a + a : a;
      case 963:
        return 110 === a.charCodeAt(5) ? "-webkit-" + a + a : a;
      case 1009:
        if (100 !== a.charCodeAt(4)) break;
      case 969:
      case 942:
        return "-webkit-" + a + a;
      case 978:
        return "-webkit-" + a + "-moz-" + a + a;
      case 1019:
      case 983:
        return "-webkit-" + a + "-moz-" + a + "-ms-" + a + a;
      case 883:
        return 45 === a.charCodeAt(8) ? "-webkit-" + a + a : a;
      case 932:
        if (45 === a.charCodeAt(4))
          switch (a.charCodeAt(5)) {
            case 103:
              return (
                "-webkit-box-" +
                a.replace("-grow", "") +
                "-webkit-" +
                a +
                "-ms-" +
                a.replace("grow", "positive") +
                a
              );
            case 115:
              return (
                "-webkit-" + a + "-ms-" + a.replace("shrink", "negative") + a
              );
            case 98:
              return (
                "-webkit-" +
                a +
                "-ms-" +
                a.replace("basis", "preferred-size") +
                a
              );
          }
        return "-webkit-" + a + "-ms-" + a + a;
      case 964:
        return "-webkit-" + a + "-ms-flex-" + a + a;
      case 1023:
        if (99 !== a.charCodeAt(8)) break;
        b = a
          .substring(a.indexOf(":", 15))
          .replace("flex-", "")
          .replace("space-between", "justify");
        return (
          "-webkit-box-pack" + b + "-webkit-" + a + "-ms-flex-pack" + b + a
        );
      case 1005:
        return pa.test(a)
          ? a.replace(ca, ":-webkit-") + a.replace(ca, ":-moz-") + a
          : a;
      case 1e3:
        b = a.substring(13).trim();
        c = b.indexOf("-") + 1;
        switch (b.charCodeAt(0) + b.charCodeAt(c)) {
          case 226:
            b = a.replace(H, "tb");
            break;
          case 232:
            b = a.replace(H, "tb-rl");
            break;
          case 220:
            b = a.replace(H, "lr");
            break;
          default:
            return a;
        }
        return "-webkit-" + a + "-ms-" + b + a;
      case 1017:
        if (-1 === a.indexOf("sticky", 9)) break;
      case 975:
        c = (a = e).length - 10;
        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a)
          .substring(e.indexOf(":", 7) + 1)
          .trim();
        switch ((h = b.charCodeAt(0) + (b.charCodeAt(7) | 0))) {
          case 203:
            if (111 > b.charCodeAt(8)) break;
          case 115:
            a = a.replace(b, "-webkit-" + b) + ";" + a;
            break;
          case 207:
          case 102:
            a =
              a.replace(b, "-webkit-" + (102 < h ? "inline-" : "") + "box") +
              ";" +
              a.replace(b, "-webkit-" + b) +
              ";" +
              a.replace(b, "-ms-" + b + "box") +
              ";" +
              a;
        }
        return a + ";";
      case 938:
        if (45 === a.charCodeAt(5))
          switch (a.charCodeAt(6)) {
            case 105:
              return (
                (b = a.replace("-items", "")),
                "-webkit-" + a + "-webkit-box-" + b + "-ms-flex-" + b + a
              );
            case 115:
              return "-webkit-" + a + "-ms-flex-item-" + a.replace(da, "") + a;
            default:
              return (
                "-webkit-" +
                a +
                "-ms-flex-line-pack" +
                a.replace("align-content", "").replace(da, "") +
                a
              );
          }
        break;
      case 973:
      case 989:
        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;
      case 931:
      case 953:
        if (!0 === qa.test(e))
          return 115 === (b = e.substring(e.indexOf(":") + 1)).charCodeAt(0)
            ? S(e.replace("stretch", "fill-available"), c, d, l).replace(
                ":fill-available",
                ":stretch"
              )
            : a.replace(b, "-webkit-" + b) +
                a.replace(b, "-moz-" + b.replace("fill-", "")) +
                a;
        break;
      case 962:
        if (
          ((a =
            "-webkit-" + a + (102 === a.charCodeAt(5) ? "-ms-" + a : "") + a),
          211 === d + l &&
            105 === a.charCodeAt(13) &&
            0 < a.indexOf("transform", 10))
        )
          return (
            a.substring(0, a.indexOf(";", 27) + 1).replace(ra, "$1-webkit-$2") +
            a
          );
    }
    return a;
  }
  function P(e, c) {
    var d = e.indexOf(1 === c ? ":" : "{"),
      l = e.substring(0, 3 !== c ? d : 10);
    d = e.substring(d + 1, e.length - 1);
    return I(2 !== c ? l : l.replace(sa, "$1"), d, c);
  }
  function ja(e, c) {
    var d = S(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
    return d !== c + ";"
      ? d.replace(ta, " or ($1)").substring(4)
      : "(" + c + ")";
  }
  function L(e, c, d, l, a, h, b, u, m, g) {
    for (var p = 0, k = c, v; p < A; ++p)
      switch ((v = J[p].call(y, e, k, d, l, a, h, b, u, m, g))) {
        case void 0:
        case !1:
        case !0:
        case null:
          break;
        default:
          k = v;
      }
    switch (k) {
      case void 0:
      case !1:
      case !0:
      case null:
      case c:
        break;
      default:
        return k;
    }
  }
  function U(e) {
    switch (e) {
      case void 0:
      case null:
        A = J.length = 0;
        break;
      default:
        switch (e.constructor) {
          case Array:
            for (var c = 0, d = e.length; c < d; ++c) U(e[c]);
            break;
          case Function:
            J[A++] = e;
            break;
          case Boolean:
            aa = !!e | 0;
        }
    }
    return U;
  }
  function V(e) {
    for (var c in e) {
      var d = e[c];
      switch (c) {
        case "compress":
          ea = d | 0;
          break;
        case "prefix":
          (I = null),
            d
              ? "function" !== typeof d
                ? (w = 1)
                : ((w = 2), (I = d))
              : (w = 0);
      }
    }
    return V;
  }
  function y(e, c) {
    if (void 0 !== this && this.constructor === y) return fa(e);
    var d = e,
      l = d.charCodeAt(0);
    33 > l && (d = d.trim());
    l = 1;
    W = d;
    d = [W];
    if (0 < A) {
      var a = L(-1, c, d, d, D, x, 0, 0, 0, 0);
      void 0 !== a && "string" === typeof a && (c = a);
    }
    var h = Q(R, d, c, 0, 0);
    0 < A &&
      ((a = L(-2, h, d, d, D, x, h.length, 0, 0, 0)),
      void 0 !== a && "string" !== typeof (h = a) && (l = 0));
    W = "";
    E = 0;
    x = D = 1;
    return 0 === ea * l
      ? h
      : h
          .replace(O, "")
          .replace(ua, "")
          .replace(va, "$1")
          .replace(wa, "$1")
          .replace(xa, " ");
  }
  var ha = /^\0+/g,
    O = /[\0\r\f]/g,
    ca = /: */g,
    pa = /zoo|gra/,
    ra = /([,: ])(transform)/g,
    na = /,+\s*(?![^(]*[)])/g,
    oa = / +\s*(?![^(]*[)])/g,
    ma = /,\r+?/g,
    M = /([\t\r\n ])*\f?&/g,
    ka = /@(k\w+)\s*(\S*)\s*/,
    T = /::(place)/g,
    la = /:(read-only)/g,
    ua = /\s+(?=[{\];=:>])/g,
    va = /([[}=:>])\s+/g,
    wa = /(\{[^{]+?);(?=\})/g,
    xa = /\s{2,}/g,
    H = /[svh]\w+-[tblr]{2}/,
    ia = /\(\s*(.*)\s*\)/g,
    ta = /([\s\S]*?);/g,
    da = /-self|flex-/g,
    sa = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
    qa = /stretch|:\s*\w+\-(?:conte|avail)/,
    x = 1,
    D = 1,
    E = 0,
    w = 1,
    ea = 0,
    R = [],
    J = [],
    A = 0,
    I = null,
    aa = 0,
    W = "";
  y.use = U;
  y.set = V;
  void 0 !== Y && V(Y);
  return y;
};

export default X;
